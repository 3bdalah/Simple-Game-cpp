#include <SFML/Graphics.hpp>
#include <bits/stdc++.h>
#include <ctime>
#include <cstdlib>

using namespace std;
sf::Vector2f Generate();
int sped=100;
int main()
{
     sf::Vector2f windowSize(300, 200);
     sf::RenderWindow game(sf::VideoMode(windowSize.x,windowSize.y),"Move Rectangel ", sf::Style::Close | sf::Style::Resize);

     // Rondame Number
     srand(time(0));

     // Create counter
     int counter=-1;

     sf::RectangleShape snake1( sf::Vector2f(20.0f,20.0f) );
     sf::RectangleShape snake2( sf::Vector2f(20.0f,20.0f) );
     sf::RectangleShape rock( sf::Vector2f(20.0f,20.0f) );
     //sf::RectangleShape shot( sf::Vector2f(5.0f,10.0f) );

     // Set Color
     snake1.setFillColor(sf::Color::Red);
     snake2.setFillColor(sf::Color::Blue);
     rock.setFillColor(sf::Color::Green);

     // Vector Movement
     sf::Vector2f  pos1,mov1,posmove;
     pos1.x =50 , pos1.y =50;
     posmove.x=11,posmove.y=-11;
//     shot.setPosition(10.0f,10.0f);
     while(game.isOpen() ){
     sf::Event evnt;
        while(game.pollEvent(evnt)){
             switch(evnt.type){
                 case  sf::Event::Closed:
                       game.close();
                 break;
                 case sf::Event::Resized:
                    cout<<"New Resized Window : "<<evnt.size.width<<endl;
                 break;

             }
        }

        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Key::A)){
            snake1.move(-1.0f,0.0f);
        }if(sf::Keyboard::isKeyPressed(sf::Keyboard::Key::S)){
            snake1.move(0.0f,1.0f);
        }if(sf::Keyboard::isKeyPressed(sf::Keyboard::Key::D)){
            snake1.move(1.0f,0.0f);
        }if(sf::Keyboard::isKeyPressed(sf::Keyboard::Key::W)){
            snake1.move(0.0f,-1.0f);
        };

        if( snake1.getPosition().x == snake2.getPosition().x && snake1.getPosition().y == snake2.getPosition().y) {

           // Pluse Counter
           counter++;
           if(counter%5==0){
            sped+=50;
           }

          sf::Vector2f pos;


          pos.x  = ( rand() % 300 - (20))*1;
          pos.y = ( rand() % 200 -(20)) *1;

          if(pos.x < 0 || pos.x > windowSize.x)
                pos.x *= -1;
          else if(pos.y < 0 || pos.y > windowSize.y)
                pos.y *= -1;

           cout<<"Score : " << counter <<endl;
              //pos1 = Generate();
              pos1+=mov1;
              snake2.setPosition(pos);
           // snake2.move(pos.x ,pos.y);

         }
         // posmove.x++;
         /*posmove.y++;
         if(posmove.y == windowSize.y){
          sf::Vector2f posrock;
          // posrock.x  = ( rand() % 400 - (20))*1;
          posrock.y = ( rand() % 300 -(20)) *1;
          rock.setPosition(-posrock);

         }else{
           rock.setPosition(posmove);
         }*/
        game.clear();
        game.draw(snake2);
        game.draw(snake1);
        //game.draw(rock);
        // Shoe Shot
//        game.draw(shot);
        game.setFramerateLimit(sped);
        game.display();
    }
    return 0;
}
